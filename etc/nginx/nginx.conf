user www-data;

worker_processes 2;

error_log /var/log/nginx/error.log;
pid        /run/nginx.pid;
 
events {
    worker_connections 1024;
    use epoll;
}
 
http {
    charset utf-8;
 
    # Enumerate all the Tornado servers here
    upstream frontends {
        server localhost:8000;
        server localhost:8001;
        server localhost:8002;
        server localhost:8003;
    }
 
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
 
    access_log /var/log/nginx/access.log;
 
    keepalive_timeout 65;
    proxy_read_timeout 200;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    gzip on;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_types text/plain text/css text/xml
               application/x-javascript application/xml
               application/atom+xml text/javascript;
 
    # Only retry if there was a communication error, not a timeout
    # on the Tornado server (to avoid propagating "queries of death"
    # to all frontends)
    proxy_next_upstream error;
 
    server {
        listen 80;
	server_name  localhost;
        location ^~ /static/ {
            root /var/pythonweb;
            if ($query_string) {
                expires max;
            }
	   index index.html index.htm;
        }
        location = /favicon.ico {
        rewrite (.*) /static/favicon.ico;
        }
        location = /robots.txt {
        rewrite (.*) /static/robots.txt;
        }
 
        location / {
            proxy_pass_header Server;
            proxy_set_header Host $http_host;
            proxy_redirect off;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Scheme $scheme;
            proxy_pass http://frontends;
        }
    }
}
